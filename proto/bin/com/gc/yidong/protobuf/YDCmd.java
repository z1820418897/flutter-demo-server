// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: b.proto

package com.gc.yidong.protobuf;

public final class YDCmd {
  private YDCmd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code protobuf.YiDongCmd}
   */
  public enum YiDongCmd
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>BEAT = 1001;</code>
     */
    BEAT(1001),
    /**
     * <pre>
     *获取所有的位置点
     * </pre>
     *
     * <code>REQ_SITES = 1002;</code>
     */
    REQ_SITES(1002),
    /**
     * <pre>
     *返回所有的位置点
     * </pre>
     *
     * <code>RSP_SITES = 1003;</code>
     */
    RSP_SITES(1003),
    /**
     * <pre>
     * 发送要去的位置点
     * </pre>
     *
     * <code>REQ_SITE = 1004;</code>
     */
    REQ_SITE(1004),
    /**
     * <pre>
     * 返回到达的位置点
     * </pre>
     *
     * <code>RSP_SITE = 1005;</code>
     */
    RSP_SITE(1005),
    /**
     * <pre>
     * 停障信息上传
     * </pre>
     *
     * <code>RSP_OBSTACLE_STOP = 1006;</code>
     */
    RSP_OBSTACLE_STOP(1006),
    /**
     * <pre>
     * 设备状态信息上传
     * </pre>
     *
     * <code>RSP_DEVICE_INFO = 1007;</code>
     */
    RSP_DEVICE_INFO(1007),
    /**
     * <pre>
     * 定位
     * </pre>
     *
     * <code>REQ_DEVICE_LOCATE = 1008;</code>
     */
    REQ_DEVICE_LOCATE(1008),
    /**
     * <pre>
     *定位结果
     * </pre>
     *
     * <code>RSP_DEVICE_LOCATE = 1009;</code>
     */
    RSP_DEVICE_LOCATE(1009),
    /**
     * <pre>
     *接收到到达的命令后  反馈收到
     * </pre>
     *
     * <code>REQ_SITE_SUBMIT = 1010;</code>
     */
    REQ_SITE_SUBMIT(1010),
    /**
     * <pre>
     *发送要去的点命令后 收到的反馈
     * </pre>
     *
     * <code>RSP_SITE_SUBMIT = 1011;</code>
     */
    RSP_SITE_SUBMIT(1011),
    ;

    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>BEAT = 1001;</code>
     */
    public static final int BEAT_VALUE = 1001;
    /**
     * <pre>
     *获取所有的位置点
     * </pre>
     *
     * <code>REQ_SITES = 1002;</code>
     */
    public static final int REQ_SITES_VALUE = 1002;
    /**
     * <pre>
     *返回所有的位置点
     * </pre>
     *
     * <code>RSP_SITES = 1003;</code>
     */
    public static final int RSP_SITES_VALUE = 1003;
    /**
     * <pre>
     * 发送要去的位置点
     * </pre>
     *
     * <code>REQ_SITE = 1004;</code>
     */
    public static final int REQ_SITE_VALUE = 1004;
    /**
     * <pre>
     * 返回到达的位置点
     * </pre>
     *
     * <code>RSP_SITE = 1005;</code>
     */
    public static final int RSP_SITE_VALUE = 1005;
    /**
     * <pre>
     * 停障信息上传
     * </pre>
     *
     * <code>RSP_OBSTACLE_STOP = 1006;</code>
     */
    public static final int RSP_OBSTACLE_STOP_VALUE = 1006;
    /**
     * <pre>
     * 设备状态信息上传
     * </pre>
     *
     * <code>RSP_DEVICE_INFO = 1007;</code>
     */
    public static final int RSP_DEVICE_INFO_VALUE = 1007;
    /**
     * <pre>
     * 定位
     * </pre>
     *
     * <code>REQ_DEVICE_LOCATE = 1008;</code>
     */
    public static final int REQ_DEVICE_LOCATE_VALUE = 1008;
    /**
     * <pre>
     *定位结果
     * </pre>
     *
     * <code>RSP_DEVICE_LOCATE = 1009;</code>
     */
    public static final int RSP_DEVICE_LOCATE_VALUE = 1009;
    /**
     * <pre>
     *接收到到达的命令后  反馈收到
     * </pre>
     *
     * <code>REQ_SITE_SUBMIT = 1010;</code>
     */
    public static final int REQ_SITE_SUBMIT_VALUE = 1010;
    /**
     * <pre>
     *发送要去的点命令后 收到的反馈
     * </pre>
     *
     * <code>RSP_SITE_SUBMIT = 1011;</code>
     */
    public static final int RSP_SITE_SUBMIT_VALUE = 1011;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static YiDongCmd valueOf(int value) {
      return forNumber(value);
    }

    public static YiDongCmd forNumber(int value) {
      switch (value) {
        case 1001: return BEAT;
        case 1002: return REQ_SITES;
        case 1003: return RSP_SITES;
        case 1004: return REQ_SITE;
        case 1005: return RSP_SITE;
        case 1006: return RSP_OBSTACLE_STOP;
        case 1007: return RSP_DEVICE_INFO;
        case 1008: return REQ_DEVICE_LOCATE;
        case 1009: return RSP_DEVICE_LOCATE;
        case 1010: return REQ_SITE_SUBMIT;
        case 1011: return RSP_SITE_SUBMIT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<YiDongCmd>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        YiDongCmd> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<YiDongCmd>() {
            public YiDongCmd findValueByNumber(int number) {
              return YiDongCmd.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.gc.yidong.protobuf.YDCmd.getDescriptor().getEnumTypes().get(0);
    }

    private static final YiDongCmd[] VALUES = values();

    public static YiDongCmd valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private YiDongCmd(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf.YiDongCmd)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\007b.proto\022\010protobuf*\336\001\n\tYiDongCmd\022\t\n\004BEA" +
      "T\020\351\007\022\016\n\tREQ_SITES\020\352\007\022\016\n\tRSP_SITES\020\353\007\022\r\n\010" +
      "REQ_SITE\020\354\007\022\r\n\010RSP_SITE\020\355\007\022\026\n\021RSP_OBSTAC" +
      "LE_STOP\020\356\007\022\024\n\017RSP_DEVICE_INFO\020\357\007\022\026\n\021REQ_" +
      "DEVICE_LOCATE\020\360\007\022\026\n\021RSP_DEVICE_LOCATE\020\361\007" +
      "\022\024\n\017REQ_SITE_SUBMIT\020\362\007\022\024\n\017RSP_SITE_SUBMI" +
      "T\020\363\007B\037\n\026com.gc.yidong.protobufB\005YDCmd"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
